''' –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞ —Å –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º '''
import sqlite3

import config  # –§–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º
import telebot

bot = telebot.TeleBot(config.token) # –û–±—å—è–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω

class DBConnector:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–º –ë–î"""

    def __init__(self, db_name):
        self.db_name = db_name

    def __enter__(self):
        self.conn = sqlite3.connect(self.db_name)
        self.cursor = self.conn.cursor()
        return self.cursor

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.conn.close()
        if exc_val:
            raise

db = DBConnector("username.db")

# –Ø–∑—ã–∫–æ–≤—ã–µ —Å–ª–æ–≤–∞—Ä–∏
class Language:
    """–ö–ª–∞—Å—Å —Ö—Ä–∞–Ω—è—â–∏–π –ø–µ—Ä–µ–≤–æ–¥—ã"""
    rus = dict(reptop='–¢–æ–ø —Ä–µ–ø—É—Ç–∞—Ü–∏–∏', msgtop='–¢–æ–ø —Å–æ–æ–±—â–µ–Ω–∏–π')
    eng = dict(reptop='Top of reputation', msgtop='Top of messages')
    all = dict(botinchat="üá∑üá∫ –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞,"+\
    " –µ–≥–æ –Ω—É–∂–Ω–æ [–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å](t.me/animedev_bot?start=123).\n"+\
    "üá∫üá∏ Hello! To use bot, you should [setup](t.me/animedev_bot?start=123).")

class Controller():
    """ –¢—É—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ """
    def topbymsgform(self, page=1, PageIsChanged=False):
        """" –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ø –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º """
        l = topbymsg(page)

        if l is not None:
            rank = page*10-10
            msgs = " "
            for i in len(l):
                msgs = msgs + "{rank}.{username}: {karma}\n".format(username=l[i][0],\
                karma=l[i][1], rank=rank)
                rank = rank + 1

            keyboard = telebot.types.InlineKeyboardMarkup()

            if topbymsg(page+1) != None: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                callback_next = telebot.types.InlineKeyboardButton(text="‚Üí",\
                callback_data=["next", page])
                keyboard.add(callback_next)

            if page != 1:
                callback_back = telebot.types.InlineKeyboardButton(text="‚Üê",\
                callback_data=["back", page])
                keyboard.add(callback_back)

            if page == 1 and not PageIsChanged:
                bot.send_message(telebot.msg.chat.id, "–°—Ç—Ä–∞–Ω–∏—Ü–∞", page,\
                "\n" + msgs, reply_markup=keyboard)

            elif PageIsChanged:
                return [msgs, page]

        def topbymsg(listnum):
            """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã """

            with open(db) as database:
                sql = database.execute("SELECT name FROM users ORDER BY msgvalue DESC")

                sortednames = sql.fetchall()[listnum * 10 - 10:10 * listnum]
                newsort = []

                for i in range(10):
                    try:
                        name = sortednames.pop()[0]
                    except IndexError:
                        return None
                    data = [name,
                            database.execute("SELECT msgvalue FROM users WHERE name = ?",\
                            [(name)]).fetchall()[0][0]]
                    newsort.insert(0, data)
                return newsort

class Handlers:
    """–ö–ª–∞—Å—Å —Å–æ –≤—Å–µ–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏"""
    def __init__(self):
        @bot.message_handler(content_types=['new_chat_members'])
        def welcome_handler(msg):
            """" –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ """
            bot.send_message(msg.chat.id, Language.all.get("botinchat"), parse_mode='Markdown')

        @bot.message_handler(commands=['topmsg'])
        def handle_top_msg():
            """ –¢–æ–ø —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É """
            Controller.topbymsgform(1)

        @bot.message_handler(commands=['warning'])
        def handle_send_warning(msg):
            """ –í–ù–ò–ú–ê–ù–ò–ï """
            bot.send_message(msg.chat.id, "!!! –í–ù–ò–ú–ê–ù–ò–ï !!!\n"\
            + "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.", parse_mode='Markdown')

        @bot.callback_query_handler(func=lambda call: True)
        def callback_inline(call):
            """" –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ """
            keyboard = telebot.types.InlineKeyboardMarkup()

            if call.message:
                if "next" in call.data:
                    msg = Controller.topbymsgform(call.data[1]+1, True)
                    bot.edit_message_text(chat_id=call.message.chat.id,\
                    message_id=call.message.message_id,\
                    text="–°—Ç—Ä–∞–Ω–∏—Ü–∞ {}\n{}".format(msg[1], msg[0]),\
                    reply_markup=keyboard)
                elif "back" in call.data:
                    msg = Controller.topbymsgform(call.data[1]-1, True)
                    bot.edit_message_text(chat_id=call.message.chat.id,\
                    message_id=call.message.message_id,\
                    text="–°—Ç—Ä–∞–Ω–∏—Ü–∞ {}\n{}".format(msg[1], msg[0]),\
                    reply_markup=keyboard)


if __name__ == '__main__':
    handlers = Handlers()
    bot.polling(none_stop=True)
